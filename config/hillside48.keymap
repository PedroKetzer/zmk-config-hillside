/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define SYM_L    3
#define NUM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)

/ {
    macros {
        macPrint: macPrint {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_3)>;
            label = "MACPRINT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | SHIFT |   Z   |   X   |   C   |   V   |   B   | CAPS  |-------------------|  ESC  |   N   |   M   |   ,   |   .   |   /   | SHIFT |
 * ----------------| CTRL  |-------|  GUI  |  ALT  | SPACE |  Sym  |---|  Num  | SPACE |  ALT  |  GUI  |-------|   '   |----------------
 */

            bindings = <
&kp GRAVE             &kp Q  &kp W       &kp E  &kp R             &kp T                                                   &kp Y     &kp U      &kp I      &kp O      &kp P      &kp BSPC
&kp TAB               &kp A  &kp S       &kp D  &kp F             &kp G                                                   &kp H     &kp J      &kp K      &kp L      &kp SQT    &kp ENTER
&mt LEFT_SHIFT LCAPS  &kp Z  &kp X       &kp C  &kp V             &kp B     &kp LEFT_GUI                        &tog 2    &kp N     &kp M      &kp COMMA  &kp DOT    &kp SLASH  &kp RSHFT
                             &kp K_MUTE         &kp LEFT_CONTROL  &kp LALT  &mo 1         &kp SPACE  &kp SPACE  &kp RGUI  &kp LALT  &kp GLOBE             &macPrint
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp K_REDO K_UNDO>;
        };

        symbol_layer {
            bindings = <
&kp ESCAPE  &mt KP_NUMBER_1 EXCLAMATION  &mt KP_NUMBER_2 NUMBER_2  &mt KP_NUMBER_3 HASH  &mt KP_NUMBER_4 DOLLAR  &mt KP_NUMBER_5 PERCENT                                          &mt KP_NUMBER_6 CARET  &mt KP_NUMBER_7 AMPERSAND  &mt KP_NUMBER_8 ASTERISK     &mt KP_NUMBER_9 LEFT_PARENTHESIS  &mt KP_NUMBER_0 RIGHT_PARENTHESIS  &mt UNDERSCORE MINUS
&trans      &trans                       &trans                    &trans                &trans                  &trans                                                           &trans                 &trans                     &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET     &mt COLON SEMICOLON                &mt PIPE NON_US_BACKSLASH
&trans      &trans                       &trans                    &trans                &trans                  &trans                   &trans                  &trans          &kp UP_ARROW           &trans                     &trans                       &trans                            &trans                             &trans
                                         &trans                                          &trans                  &trans                   &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN               &kp RIGHT                                               &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_AC_REDO K_UNDO>;
        };

        number_function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp ASTERISK                                  &kp PLUS   &mt F7 KP_NUMBER_7  &mt F8 KP_NUMBER_8  &mt F9 KP_NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp FSLH                                      &kp MINUS  &mt F4 KP_NUMBER_4  &mt F5 KP_NUMBER_5  &mt F6 KP_NUMBER_6  &trans  &kp ENTER
&trans  &trans  &trans  &trans  &trans  &kp EQUAL     &to 0                   &sl 3   &kp COMMA  &mt F1 KP_NUMBER_1  &mt F2 KP_NUMBER_2  &mt F3 KP_NUMBER_3  &trans  &trans
                &trans          &trans  &trans        &trans  &trans  &trans  &trans  &trans     &kp KP_NUMBER_0                         &sys_reset
            >;
        };

        adj_layer {
            /* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | QWERTY| DVORAK| COLEMK|       |       |-----------------------------------|       |Prt Scr|       | EP_OFF| EP_ON |       |
 * |       | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       |       |
 * | BOOTL | RESET |       |OUT_USB|OUT_BLE|       |BT CLR |-------------------|       |       |       |       |       |       | SHIFT |
 * ----------------|       |-------|       |       |       |       |---|       |       |       |       |-------| CTRL  |----------------
 */

            bindings = <
&none        &to 0         &trans        &trans        &none         &none                                             &none   &kp PRINTSCREEN  &none  &ext_power EP_OFF  &ext_power EP_ON  &none
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                      &none   &none            &none  &none              &none             &none
&bootloader  &sys_reset    &none         &out OUT_USB  &out OUT_BLE  &none         &bt BT_CLR                  &none   &none   &none            &none  &none              &none             &trans
                           &trans                      &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans                  &kp RCTRL
            >;
        };
    };
};
